{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","firebase","getFirebase","auth","then","logout","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","console","log","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","concat","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","React","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initialState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80998ad7.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n\n  return (\n    <ul className='right'>\n      <li><NavLink to='/create'>New Project</NavLink></li>\n      <li><a onClick={props.signOut}>Log Out</a></li>\n      <li><NavLink to='/' className='btn btn-floating pin lighten-1'>\n        {props.profile.initials}\n      </NavLink></li>\n    </ul>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","\n\nexport const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase()\n\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' })\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err })\n    })\n    \n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase()\n\n    firebase.auth().signOut()\n    .then(() => {\n      firebase.logout() // stops permissions error when logging out\n      dispatch({ type: 'SIGNOUT_SUCCESS'})\n    })\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase() \n    const firestore = getFirestore()\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then((res) => {\n      return firestore.collection('users').doc(res.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0],\n      })\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' })\n    }).catch(err => {\n      dispatch({ type: 'SIGNUP_ERROR', err })\n    })\n  }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className='right'>\n      <li><NavLink to='/signup'>Sign Up</NavLink></li>\n      <li><NavLink to='/signin'>Log In</NavLink></li>\n    </ul>\n  )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n  const { auth, profile } = props\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">The Gear Report</Link>\n        { links }\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n  const { notifications } = props\n  console.log('notificationss', notifications);\n  return (\n    <div className='section'>\n      <div className='card z-depth-0'>\n        <div className='card-content'>\n          <span className='card-title'>Notifications</span>\n          <ul className='notifications'>\n            { notifications && notifications.map(item => {\n              return (\n                <li key={item.id}>\n                  <span className='pink-text'>{item.user}: </span>\n                  <span>{item.content}</span>\n                  <div className='grey-text note-date'>\n                    {moment(item.time.toDate()).fromNow()}\n                  </div>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications ","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n  return (\n    <div className='card z-depth-0 project-summary'>\n        <div className='card-content grey-text text-darken-3'>\n          <span className='card-title'>{project.title}</span>\n            <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n            <p className='grey-text'>{moment(project.createdAt.toDate()).calendar()}</p>\n        </div>\n      </div>\n  )\n}\n\nexport default ProjectSummary\n\n","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n  return (\n    <div className='project-list section'>\n      {projects && projects.map(project => {\n        return (\n          <Link to={`/project/${project.id}`} key={project.id}><ProjectSummary project={project}  /></Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ProjectList","import React from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\n\nimport { connect } from 'react-redux'\nimport { fireStoreConnect, firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends React.Component {\n  render() {\n    const { projects, auth, notifications } = this.props\n    if (!auth.uid) return <Redirect to='/signin' />\n    return (\n      <div className='dashboard container'>\n        <div className='row'>\n          <div className='col s12 m6'>\n            <ProjectList projects={projects}  />\n          </div>\n          <div className='col s12 m5 offset-m1'>\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] },\n  ])\n)(Dashboard)","import React from 'react'\n\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\n\nconst ProjectDetails = (props) => {\n  const { project, auth } = props\n    if (!auth.uid) return <Redirect to='/signin' />\n  if (project) {\n    return (\n      <div className='container section project-details'>\n        <div className='card z-depth-0'>\n          <div className='card-title'>\n            <span className='card-title'>Project Title - { project.title }</span>\n            <p>{ project.content }</p>\n          </div>\n          <div className='card-action grey lighten-4 grey-text'>\n            <div>Posted By { project.authorFirstName } {project.authorLastName }</div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div> \n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n        <div className='container center'>\n          <p>Loading project...</p>\n        </div>\n      )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id\n  const projects = state.firestore.data.projects\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }\n  ])\n)(ProjectDetails)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\n\nclass SignIn extends React.Component{\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.signIn(this.state)\n  }\n\n  render() {\n    const { authError, auth } = this.props \n    if (auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className='container'>\n        <form className='white' onSubmit={this.handleSubmit}>\n          <h5 className='grey-text text-darken-3'>Sign In</h5>\n\n          <div className='input-field'>\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' onChange={this.handleChange} />\n          </div>\n\n          <div className='input-field'>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' onChange={this.handleChange} />\n          </div>\n\n          <div className='input-field'>\n            <button className='btn blue lighten-1 z-depth-0'>Login</button>\n            <div className='red-text center'>\n              {authError ? <p>Auth Error</p> : null}\n            </div>\n          </div>\n\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\n\nclass SignUp extends React.Component{\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.signUp(this.state )\n  }\n\n  render() {\n    const { auth, authError } = this.props \n    if (auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className='container'>\n        <form className='white' onSubmit={this.handleSubmit}>\n          <h5 className='grey-text text-darken-3'>Sign In</h5>\n\n          <div className='input-field'>\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' onChange={this.handleChange} />\n          </div>\n\n          <div className='input-field'>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' onChange={this.handleChange} />\n          </div>\n\n          <div className='input-field'>\n            <label htmlFor='firstName'>First Name</label>\n            <input type='text' id='firstName' onChange={this.handleChange} />\n          </div>\n\n          <div className='input-field'>\n            <label htmlFor='lastName'>Last Name</label>\n            <input type='text' id='lastName' onChange={this.handleChange} />\n          </div>\n\n          <div className='input-field'>\n            <button className='btn blue lighten-1 z-depth-0'>Sign Up</button>\n            <div className='red-text center'>\n              { authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser ))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps )(SignUp)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends React.Component{\n  state = {\n    title: '',\n    content: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.createProject(this.state)\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { auth } = this.props\n    if (!auth.uid) return <Redirect to='/signin' />\n    return (\n      <div className='container'>\n        <form className='white' onSubmit={this.handleSubmit}>\n          <h5 className='grey-text text-darken-3'>Create New Project</h5>\n\n          <div className='input-field'>\n            <label htmlFor='title'>Title</label>\n            <input type='text' id='title' onChange={this.handleChange} />\n          </div>\n\n          <div className='input-field'>\n            <label htmlFor='content'>Project Content</label>\n            <textarea id='content' className='materialize-textarea' onChange={this.handleChange} />\n          </div>\n\n          <div className='input-field'>\n            <button className='btn blue lighten-1 z-depth-0'>Create</button>\n          </div>\n\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  // \n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    //make async call to db\n    const firestore = getFirestore()\n    const profile = getState().firebase.profile\n    const authorId = getState().firebase.auth.uid\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT', project })\n    }).catch((err) => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err })\n    })\n    \n  }\n}","import React, { Component } from 'react'; \nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Navbar/>\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  authError: null\n}\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type){\n    case 'LOGIN_ERROR':\n    console.log('login error');\n     return {\n       ...state,\n       authError: 'Login Failed'\n     }\n    case 'LOGIN_SUCCESS':\n     console.log('login success');\n     return {\n       ...state,\n       authError: null\n     }\n    case 'SIGNOUT_SUCCESS':\n     console.log('signout success');\n     return state\n    case 'SIGNUP_SUCCESS':\n     console.log('signup success');\n     return {\n       ...state,\n       authError: null\n     }\n    case 'SIGNUP_ERROR':\n     console.log('signup error');\n     return {\n       ...state,\n       authError: action.err.message\n     }\n    default:\n    return state\n  }\n}\n\nexport default authReducer","const initialState = {\n  projects: [\n    {id: '1', title: 'Replace broken anchor', content: 'blah blah blah'},\n    {id: '2', title: 'Remove overgrown foliage', content: 'blah blah blah'},\n    {id: '3', title: 'Replace 3rd bolt', content: 'blah blah blah'}\n  ]\n}\n\nconst projectReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT':\n      return state\n    case 'CREATE_PROJECT_ERROR':\n      return state\n    default: \n      return state\n  }\n}\n\nexport default projectReducer","import { combineReducers } from 'redux'\n\nimport authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n})\n\nexport default rootReducer"," import firebase from 'firebase/app'\n import 'firebase/firestore'\n import 'firebase/auth'\n \n // Initialize Firebase\n var config = {\n  apiKey: \"AIzaSyB40t_6E4bM_h8HAyWw_ACtA0H3Cf_jSPs\",\n  authDomain: \"net-ninja-redux-firebase-tut.firebaseapp.com\",\n  databaseURL: \"https://net-ninja-redux-firebase-tut.firebaseio.com\",\n  projectId: \"net-ninja-redux-firebase-tut\",\n  storageBucket: \"net-ninja-redux-firebase-tut.appspot.com\",\n  messagingSenderId: \"935580923900\"\n};\n\nfirebase.initializeApp(config);\nfirebase.firestore()\n\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\n\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users' , attachAuthIsReady: true }), \n    )\n  )\n\nstore.firebaseAuthIsReady.then(() => { //checks auth status before rendering page\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  serviceWorker.unregister();\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}